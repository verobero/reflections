What happens when you initialize a repository? Why do you need to do it?
Initializing a repository changes it into a Git repository.
Here, the meta data used to store all the changes made to a file are stored, and other important information.
We need to do it so that Git can perform its version control function.


How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging directory is the connection between a working directory and the repository.
A working directory is the currently active directory.
While a repository is a directory which is supported with version control features.
Staging area is the area where a working directory is changed into a repository.


How can you use the staging area to make sure you have one commit per logical change?
We can compare the file in the staging area to the file in the repository to with git diff
This function lets us see the differences between those two files
And the difference can show whether we have done one logical change.


What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branches would be helpful when we want to create another version of the master file, but would like to still keep the master file.


How do the diagrams help you visualize the branch structure?
We can trace back which changes are applied to which branch and which are not.
We can also find out how many versions there are of the program.


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Result of merging two branches together:
We can merge the work of one version to another.
Represent in a diagram because there are branches, so it will be easier to represent it in a diagram.

What are the pros and cons of Git's automatic merging vs always doing merges manually?
Automatic pros: we don't have to search the differences one by one and edit them.
Automatic cons: we don't know which changes are merged.
Manual pros: we know exactly what is merged with what.
Manual cons: we have to edit the codes to merge one by one.